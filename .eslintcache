[{"/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/App.js":"1","/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/index.js":"2","/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/pages/HomePage/HomePage.js":"3","/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/components/RightSidebar/RightSidebar.js":"4","/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/components/TableLayout/TableLayout.js":"5","/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/components/LeftSidebar/LeftSidebar.js":"6","/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/reportWebVitals.js":"7","/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/pages/ContactPage/ContactPage.js":"8","/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/components/Footer/Footer.js":"9","/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/components/ContactForm/ContactForm.js":"10","/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/components/Introduction/Introduction.js":"11"},{"size":596,"mtime":1607604874645,"results":"12","hashOfConfig":"13"},{"size":500,"mtime":1607597301270,"results":"14","hashOfConfig":"13"},{"size":273,"mtime":1607612149278,"results":"15","hashOfConfig":"13"},{"size":640,"mtime":1607702991546,"results":"16","hashOfConfig":"13"},{"size":609,"mtime":1607698487710,"results":"17","hashOfConfig":"13"},{"size":962,"mtime":1607711283411,"results":"18","hashOfConfig":"13"},{"size":362,"mtime":1607597301272,"results":"19","hashOfConfig":"13"},{"size":259,"mtime":1607701496509,"results":"20","hashOfConfig":"13"},{"size":220,"mtime":1607699666549,"results":"21","hashOfConfig":"13"},{"size":2338,"mtime":1607708307705,"results":"22","hashOfConfig":"13"},{"size":1466,"mtime":1607701333590,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"w8tnsy",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/App.js",[],["50","51"],"/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/index.js",[],["52","53"],"/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/pages/HomePage/HomePage.js",[],"/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/components/RightSidebar/RightSidebar.js",[],"/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/components/TableLayout/TableLayout.js",[],["54","55"],"/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/components/LeftSidebar/LeftSidebar.js",[],"/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/reportWebVitals.js",[],"/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/pages/ContactPage/ContactPage.js",[],"/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/components/Footer/Footer.js",[],"/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/components/ContactForm/ContactForm.js",["56"],"import React, { useState } from 'react';\nimport './ContactForm.css';\nimport logo from '../../assets/logo.png'\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [status, setStatus] = useState('Send');\n  let buttonText = status;\n\n  function handleChange(e) {\n    let id = e.target.id;\n    let value = e.target.value;\n    if (id === 'name') { setName(value); }\n    else if (id === 'email') { setEmail(value); }\n    else if (id === 'message') { setMessage(value); }\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setStatus('Sending');\n    fetch({\n      method: \"POST\",\n      url: \"http://localhost:5000/contact\",\n      data: {\n        name: name,\n        email: email,\n        message: message\n      }\n    }).then((res) => {\n      if (res.OK) { \n        setStatus('Sent');\n        setTimeout(() => {\n          setName(''); \n          setEmail(''); \n          setMessage(''); \n          setStatus('Send');\n        }, 50000);\n     } else {\n      setStatus('Failed. Try again.');\n     }\n    });\n  };\n\n return (\n  <div>\n    <h1 className=\"contact-title\">stay in touch</h1>\n   <form \n    onSubmit={handleSubmit}\n    method=\"POST\"\n    className=\"form\"\n   >\n    <div className=\"info\">\n    <div className=\"stamp\" />\n    <div className=\"inputs\">\n    <label htmlFor=\"name\" className=\"label\">\n      <input\n        type=\"text\"\n        id=\"name\"\n        value={name}\n        onChange={handleChange}\n        placeholder=\"a name\"\n        required\n        className=\"input\"\n      />\n    </label>\n    <label htmlFor=\"email\" className=\"label\">\n      <input\n        type=\"email\"\n        id=\"email\"\n        value={email}\n        onChange={handleChange}\n        placeholder=\"an e-mail address\"\n        required\n        className=\"input\"\n      />\n    </label>\n    </div>\n    </div>\n    <div className=\"seperation\" />\n    <div className=\"msg\">\n    <label htmlFor=\"message\" className=\"label\">\n      <textarea\n        id=\"message\"\n        value={message}\n        onChange={handleChange}\n        placeholder=\"a free speech goes here\"\n        required\n        className=\"input textarea\"\n      />\n    </label>\n    <button type=\"submit\" className=\"button\">{buttonText}</button>\n    </div>\n   </form>\n  </div>\n );\n}\n\nexport default ContactForm;","/Users/yasszmine/Desktop/apps/yasmin-e.github.io/src/components/Introduction/Introduction.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"57","replacedBy":"61"},{"ruleId":"59","replacedBy":"62"},{"ruleId":"57","replacedBy":"63"},{"ruleId":"59","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":12},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],["69"],["70"],["69"],["70"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]